generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model abono {
  id_abono       Int         @id @default(autoincrement())
  id_movimiento  Int
  id_met_pago    Int         @default(1)
  monto          Decimal     @default(0.00) @db.Decimal(10, 2)
  activo         Boolean     @default(true)
  fecha_registro DateTime    @default(now()) @db.DateTime(0)
  movimiento     movimiento  @relation(fields: [id_movimiento], references: [id_movimiento], onDelete: NoAction, onUpdate: NoAction, map: "abono_ibfk_1")
  metodo_pago    metodo_pago @relation(fields: [id_met_pago], references: [id_met_pago], onDelete: NoAction, onUpdate: NoAction, map: "abono_ibfk_2")

  @@index([id_met_pago], map: "id_met_pago")
  @@index([id_movimiento], map: "id_movimiento")
}

model categoria_movimiento {
  id_cat_movimiento Int          @id @default(autoincrement())
  es_ingreso_egreso Boolean      @default(true)
  nombre            String       @db.VarChar(100)
  activo            Boolean     @default(true)
  fecha_registro    DateTime    @default(now()) @db.DateTime(0)
  movimiento        movimiento[]
}

model categoria_producto {
  id_cat_producto Int        @id @default(autoincrement())
  id_tienda       Int
  nombre          String     @db.VarChar(100)
  activo          Boolean   @default(true)
  fecha_registro  DateTime  @default(now()) @db.DateTime(0)
  tienda          tienda    @relation(fields: [id_tienda], references: [id_tienda], onDelete: NoAction, onUpdate: NoAction, map: "categoria_producto_ibfk_1")
  producto        producto[]

  @@index([id_tienda], map: "id_tienda")
}

model detalle_movimiento {
  id_det_movimiento Int         @id @default(autoincrement())
  id_movimiento     Int
  id_producto       Int      @default(1)
  cantidad          Int        @default(1)
  total             Decimal    @db.Decimal(10, 2)
  movimiento        movimiento @relation(fields: [id_movimiento], references: [id_movimiento], onDelete: NoAction, onUpdate: NoAction, map: "detalle_movimiento_ibfk_1")
  producto          producto   @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "detalle_movimiento_ibfk_2")

  @@index([id_movimiento], map: "id_movimiento")
  @@index([id_producto], map: "id_producto")
}

model metodo_pago {
  id_met_pago    Int       @id @default(autoincrement())
  nombre         String    @db.VarChar(100)
  activo         Boolean  @default(true)
  fecha_registro DateTime @default(now()) @db.DateTime(0)
  abono          abono[]
}

model movimiento {
  id_movimiento                                    Int                  @id @default(autoincrement())
  id_tienda                                        Int
  id_cliente_proveedor                             Int                 @default(1)
  id_colaborador                                   Int                 @default(1)
  id_cat_movimiento                                Int                  @default(1)
  monto_total                                      Decimal             @default(0.00) @db.Decimal(10, 2)
  total_productos                                  Int                @default(0)
  estado_pago                                      Boolean             @default(true)
  monto_deuda                                      Decimal             @default(0.00) @db.Decimal(10, 2)
  activo                                           Boolean             @default(true)
  fecha_registro                                   DateTime            @default(now()) @db.DateTime(0)
  abono                                            abono[]
  detalle_movimiento                               detalle_movimiento[]
  tienda                                           tienda              @relation(fields: [id_tienda], references: [id_tienda], onDelete: NoAction, onUpdate: NoAction, map: "movimiento_ibfk_1")
  persona_movimiento_id_cliente_proveedorTopersona persona             @relation("movimiento_id_cliente_proveedorTopersona", fields: [id_cliente_proveedor], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "movimiento_ibfk_2")
  persona_movimiento_id_colaboradorTopersona       persona             @relation("movimiento_id_colaboradorTopersona", fields: [id_colaborador], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "movimiento_ibfk_3")
  categoria_movimiento                             categoria_movimiento @relation(fields: [id_cat_movimiento], references: [id_cat_movimiento], onDelete: NoAction, onUpdate: NoAction, map: "movimiento_ibfk_4")

  @@index([id_cat_movimiento], map: "id_cat_movimiento")
  @@index([id_cliente_proveedor], map: "id_cliente_proveedor")
  @@index([id_colaborador], map: "id_colaborador")
  @@index([id_tienda], map: "id_tienda")
}

model persona {
  id_persona                                          Int              @id @default(autoincrement())
  id_tipo_documento                                   Int             @default(1)
  nombre                                              String           @db.VarChar(255)
  celular                                             String           @unique(map: "celular") @db.VarChar(10)
  documento                                           String          @default("") @db.VarChar(10)
  correo                                              String          @default("") @db.VarChar(100)
  activo                                              Boolean         @default(true)
  fecha_registro                                      DateTime        @default(now()) @db.DateTime(0)
  movimiento_movimiento_id_cliente_proveedorTopersona movimiento[]     @relation("movimiento_id_cliente_proveedorTopersona")
  movimiento_movimiento_id_colaboradorTopersona       movimiento[]     @relation("movimiento_id_colaboradorTopersona")
  tipo_documento                                      tipo_documento  @relation(fields: [id_tipo_documento], references: [id_tipo_documento], onDelete: NoAction, onUpdate: NoAction, map: "persona_ibfk_1")
  tienda_persona                                      tienda_persona[]
  usuario                                             usuario[]

  @@index([id_tipo_documento], map: "id_tipo_documento")
}

model producto {
  id_producto        Int                  @id @default(autoincrement())
  id_tienda          Int
  id_cat_producto    Int                 @default(1)
  nombre             String               @db.VarChar(255)
  descripcion        String              @db.Text
  costo              Decimal              @default(0.00) @db.Decimal(10, 2)
  precio             Decimal              @default(0.00) @db.Decimal(10, 2)
  stock              Int                 @default(0)
  ruta_imagen        String              @default("") @db.VarChar(100)
  nombre_imagen      String              @default("") @db.VarChar(100)
  codigo_barras      String              @default("") @db.VarChar(255)
  activo             Boolean             @default(true)
  fecha_registro     DateTime            @default(now()) @db.DateTime(0)
  detalle_movimiento detalle_movimiento[]
  tienda             tienda              @relation(fields: [id_tienda], references: [id_tienda], onDelete: NoAction, onUpdate: NoAction, map: "producto_ibfk_1")
  categoria_producto categoria_producto  @relation(fields: [id_cat_producto], references: [id_cat_producto], onDelete: NoAction, onUpdate: NoAction, map: "producto_ibfk_2")

  @@index([id_cat_producto], map: "id_cat_producto")
  @@index([id_tienda], map: "id_tienda")
}

model rol_colaborador {
  id_rol_colaborador Int       @id @default(autoincrement())
  nombre             String   @db.VarChar(100)
  activo             Boolean  @default(true)
  fecha_registro     DateTime @default(now()) @db.DateTime(0)
}

model tienda {
  id_tienda          Int                  @id @default(autoincrement())
  nombre             String               @unique(map: "nombre") @db.VarChar(100)
  direccion          String              @default("") @db.VarChar(100)
  ciudad             String              @default("") @db.VarChar(100)
  correo             String              @default("") @db.VarChar(100)
  activo             Boolean             @default(true)
  fecha_registro     DateTime            @default(now()) @db.DateTime(0)
  categoria_producto categoria_producto[]
  movimiento         movimiento[]
  producto           producto[]
  tienda_persona     tienda_persona[]
}

model tienda_persona {
  id_tienda        Int
  id_persona       Int
  tipo_colaborador Int      @default(0)
  es_cliente       Boolean  @default(false)
  es_proveedor     Boolean  @default(false)
  activo           Boolean  @default(true)
  fecha_registro   DateTime @default(now()) @db.DateTime(0)
  tienda           tienda    @relation(fields: [id_tienda], references: [id_tienda], onDelete: NoAction, onUpdate: NoAction, map: "tienda_persona_ibfk_1")
  persona          persona   @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "tienda_persona_ibfk_2")

  @@id([id_tienda, id_persona])
  @@index([id_persona], map: "id_persona")
}

model tipo_documento {
  id_tipo_documento Int       @id @default(autoincrement())
  nombre            String    @unique(map: "nombre") @db.VarChar(100)
  activo            Boolean  @default(true)
  fecha_registro    DateTime @default(now()) @db.DateTime(0)
  persona           persona[]
}

model usuario {
  id_usuario     Int       @id @default(autoincrement())
  id_persona     Int
  nombre         String    @db.VarChar(100)
  contrasenia    String    @db.VarChar(100)
  token          String   @default("") @db.VarChar(250)
  activo         Boolean  @default(false)
  fecha_registro DateTime @default(now()) @db.DateTime(0)
  persona        persona  @relation(fields: [id_persona], references: [id_persona], onDelete: NoAction, onUpdate: NoAction, map: "usuario_ibfk_1")

  @@index([id_persona], map: "id_persona")
}
